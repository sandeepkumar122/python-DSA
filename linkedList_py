class linked:
    def __init__(self,value):
        self.head={
            'value':value,
            'next':None
        }
        self.tail=self.head
        self.length=1
    def appendL(self,value):
        Node={
            'value':value,
            'next':self.head
        }
        self.head=Node
        self.length+=1
        
    def printvalue(self):
        valuesArr=[]
        currentNode=this.head
        # for i in range(self.length):
        #     print(currentNode.value)
        #     valuesArr.append(currentNode.value)
        #     currentNode=currentNode.next
        # return valuesArr
        while(currentNode!=None):
            valuesArr.append(currentNode.value)
            currentNode=currentNode.next
        print(valuesArr)
            
    
    def prepend(self,value):
        Node={
            'value':value,
            'next':None
        }
        self.tail['next']=Node
        self.tail=Node
        self.length+=1
         
    def insertL(self,index,value):
        for i in range(self.length):
            if(i==index):
                currentNode['value']=value
                currentNode['next']=currentNode['next']
                self.length+=1
            currentNode=self.head['next']
       
         
linkedList=linked(5)
linkedList.appendL(10)
linkedList.prepend(20)
# linkedList.insertL(1,50)
# linkedList.insertL(1,60)
linkedList.printvalue
num2=linkedList.printvalue
print(num2)


