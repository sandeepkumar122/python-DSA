class linkedList{
    constructor(head){
        this.head={
            value:head,
            next:null
        }
        this.length=1;
        this.tail=this.head;
    }
    addEnd(value){
        let Node={
            value:value,
            next:null
        }
        this.tail.next=Node;
        this.length+=1;
    }
    addStart(value){
       let Node={
            value:value,
            next:this.tail
        }
        this.head=Node;
        this.length+=1;
    }
    insertEle(index,value){
        let Node={
            value:value,
            next:null
        }
        let currentNode=this.head;
        let newNode=this.head;
        let i=0;
        let findNext=this.findToIndex(index-1);
        const nextElement=findNext.next;
        findNext.next=Node;
        Node.next=nextElement;
    }
    findToIndex(index){
       let currentNode=this.head;
        for(let i=0;i<index;i++){
            currentNode=currentNode.next;
        }
        return currentNode;
    }
    printList(){
        let currentNode=this.head;
        let values=[];
        while(currentNode!=null){
            values.push(currentNode.value);
            currentNode=currentNode.next;
        }
        return values;
    }

}
list=new linkedList(4);
list.addEnd(10);
list.addStart(6);
list.insertEle(1,56);
console.log(list.printList());
// console.log(list.tail)
